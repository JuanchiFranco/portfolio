---
export const prerender = true;
import { Image } from "astro:assets";
import profileImage from "../assets/profile.jpg";
import { Icon } from "astro-icon/components";
const CURRICULUM_URL = import.meta.env.PUBLIC_CURRICULUM_URL;
---

<section id="home" class="text-[#0096c7] text-center px-4 py-16 min-h-full flex-1 overflow-y-auto flex flex-col items-center justify-center sm:px-6 sm:py-12 md:px-8 md:py-16 lg:px-12 lg:py-20">
    <Image src={profileImage} alt="Profile Picture" class="w-[150px] h-[150px] sm:w-[120px] sm:h-[120px] md:w-[180px] md:h-[180px] lg:w-[200px] lg:h-[200px] object-cover rounded-[50%] border-[3px] border-solid border-[#00b4d8]" width={500} height={500} loading="lazy" />
    <h1 class="text-[2.5rem] sm:text-[2rem] md:text-[2.8rem] lg:text-[3rem] mb-2 font-bold">Hola, soy Juan Franco Vargas</h1>
    <h2 id="dynamic-text" class="text-[1.5rem] sm:text-[1.2rem] md:text-[1.8rem] lg:text-[2rem] mb-4 min-h-[3em] flex items-center justify-center"></h2>
    <div class="flex gap-8 mt-4 sm:gap-6 md:gap-10 lg:gap-12">
        <a 
            href="https://github.com/JuanchiFranco" 
            target="_blank" 
            rel="noopener noreferrer" 
            class="text-[#005f73] text-[2rem] sm:text-[1.5rem] md:text-[2.2rem] lg:text-[2.5rem] hover:text-[#0077b6]"
            title="GitHub"
        >
            <Icon name="mdi:github" />
        </a>
        <a 
            href="https://linkedin.com/in/juanfrancovargas-dev/" 
            target="_blank" 
            rel="noopener noreferrer" 
            class="text-[#005f73] text-[2rem] sm:text-[1.5rem] md:text-[2.2rem] lg:text-[2.5rem] hover:text-[#0077b6]"
            title="LinkedIn"
        >
            <Icon name="mdi:linkedin" />
        </a>
        <a 
            href={CURRICULUM_URL} 
            target="_blank" 
            class="text-[#005f73] text-[2rem] sm:text-[1.5rem] md:text-[2.2rem] lg:text-[2.5rem] hover:text-[#0077b6]"
            title="Curriculum Vitae"
        >
            <Icon name="mdi:file-document" />
            <span class="sr-only">Curriculum Vitae</span>
        </a>
    </div>
</section>

<script is:inline>
    (function() {
        // Check if the effect is already running
        if (window.homeEffectRunning) return;
        window.homeEffectRunning = true;

        const homeTexts = ["Desarrollador Backend", "Ingeniero de Sistemas", "Apasionado por el Desarrollo Web"];
        let homeIndex = 0, homeCharIndex = 0, homeIsDeleting = false;
        let typeEffectTimeout;

        function typeEffect() {
            const current = homeTexts[homeIndex];
            const displayed = current.slice(0, homeCharIndex);
            const element = document.getElementById("dynamic-text");
            
            if (element) {
                // Usar un cursor parpadeante
                const cursor = !homeIsDeleting && homeCharIndex === current.length ? '|' : '';
                element.innerHTML = displayed + `<span class="animate-pulse">${cursor}</span>`;
                
                // Asegurar que el contenedor mantenga la altura
                element.style.minHeight = window.getComputedStyle(element).height;
            }

            if (!homeIsDeleting && homeCharIndex < current.length) {
                homeCharIndex++;
                typeEffectTimeout = setTimeout(typeEffect, 100);
            } else if (homeIsDeleting && homeCharIndex > 0) {
                homeCharIndex--;
                typeEffectTimeout = setTimeout(typeEffect, 30); // M치s r치pido al borrar
            } else {
                homeIsDeleting = !homeIsDeleting;
                if (!homeIsDeleting) homeIndex = (homeIndex + 1) % homeTexts.length;
                
                // Tiempo de pausa m치s corto
                typeEffectTimeout = setTimeout(typeEffect, homeIsDeleting ? 1000 : 100);
            }
        }

        // Cleanup function
        function cleanup() {
            if (typeEffectTimeout) {
                clearTimeout(typeEffectTimeout);
            }
            window.homeEffectRunning = false;
        }

        // Start the effect
        typeEffectTimeout = setTimeout(typeEffect, 100); // Peque침o retraso inicial

        // Clean up on component unmount
        if (typeof window !== 'undefined') {
            window.addEventListener('beforeunload', cleanup);
        }
    })();
</script>
