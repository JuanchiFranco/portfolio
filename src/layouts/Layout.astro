---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />


    <link rel="icon" href="/Juanchianimated.jpg" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <meta name="description" content="Portafolio profesional de Juan Franco, Backend Developer especializado en JavaScript, Node.js y bases de datos relacionales. Conoce mis proyectos y habilidades." />
    <meta name="author" content="Juan Darío Franco Vargas" />
    <meta name="keywords" content="backend developer, portafolio, JavaScript, Node.js, MySQL, desarrollador backend, Juan Franco" />
    <title>Juan Franco | Backend Developer</title>

    <!-- Open Graph-->
    <meta property="og:url" content="https://juanfranco-portfolio.vercel.app/">
    <meta property="og:type" content="website">
    <meta property="og:title" content="Juan Franco | Backend Developer" />
    <meta property="og:description" content="Portafolio profesional de Juan Franco, Backend Developer especializado en JavaScript, Node.js y bases de datos relacionales. Conoce mis proyectos y habilidades." />
    <meta property="og:image" content="/profile.jpg" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="juanfranco-portfolio.vercel.app">
    <meta name="twitter:creator" content="@JuanchiFranco" />
    <meta name="twitter:title" content="Juan Franco | Backend Developer" />
    <meta name="twitter:description" content="Portafolio profesional de Juan Franco, Backend Developer especializado en JavaScript, Node.js y bases de datos relacionales. Conoce mis proyectos y habilidades." />
    <meta name="twitter:image" content="/profile.jpg">
  </head>
  <body class="bg-black text-gray-200">
    <Header />
    <main class="bg-gradient-to-r from-[#0096c7] via-white to-[#0096c7] flex flex-col flex-1 overflow-hidden"> 
      <slot />
    </main>
    <Footer />
  </body>
</html>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    // 1) Función que “resucita” cada <script> inline o con src para que se ejecute otra vez.
    function reviveScripts(container) {
      const scripts = Array.from(container.querySelectorAll('script'));
      scripts.forEach(old => {
        const neo = document.createElement('script');
        // copiar todos los atributos (type, src…)
        for (const { name, value } of Array.from(old.attributes)) {
          neo.setAttribute(name, value);
        }
        // copiar inline
        neo.textContent = old.textContent;
        // reemplazar e invocar
        old.replaceWith(neo);
      });
    }

    // 2) Tu función de navegación parcial
    const navLinks = document.querySelectorAll('footer nav a');

    async function loadMain(href, replace = false) {
      const url = href + '?partial=1';
      const res = await fetch(url);
      const html = await res.text();

      const main = document.querySelector('main');
      main.innerHTML = html;

      // 3) resucitamos todos los scripts
      reviveScripts(main);

      // 4) AHORA: si al reinyectar existe el dyn-text... volvemos a llamar a typeEffect
      if (document.getElementById('dynamic-text') && typeof window.typeEffect === 'function') {
        window.typeEffect();
      }

      // 5) history
      if (replace) history.replaceState(null, '', href);
      else       history.pushState(null, '', href);
    }

    navLinks.forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        loadMain(link.getAttribute('href'));
      });
    });

    window.addEventListener('popstate', () => {
      loadMain(location.pathname, /*replace=*/true);
    });
  });
</script>